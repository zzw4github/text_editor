[
    { "keys": ["ctrl+shift+n"], "command": "new_window" }, //打开窗口
    { "keys": ["ctrl+shift+w"], "command": "close_window" }, //关闭窗口
    { "keys": ["ctrl+o"], "command": "prompt_open_file" }, //弹出打开文件窗口
    { "keys": ["ctrl+shift+t"], "command": "reopen_last_file" }, //打来最近关闭的文件
    { "keys": ["alt+o"], "command": "switch_file", "args": { "extensions": ["cpp", "cxx", "cc", "c", "hpp", "hxx", "hh", "h", "ipp", "inl", "m", "mm"] } }, //c++在 同一个类的h文件和.cpp文件间切换
    { "keys": ["ctrl+n"], "command": "new_file" }, //新建一个文件
    { "keys": ["ctrl+s"], "command": "save" }, //保存一个文件
    { "keys": ["ctrl+shift+s"], "command": "prompt_save_as" }, //另存为
    { "keys": ["ctrl+f4"], "command": "close_file" }, //关闭当前文件
    { "keys": ["ctrl+w"], "command": "close" }, //关闭但钱文件，如果没有文件关闭sublime

    { "keys": ["ctrl+k", "ctrl+b"], "command": "toggle_side_bar" }, //打开关闭文件栏
    { "keys": ["f11"], "command": "toggle_full_screen" },
    { "keys": ["shift+f11"], "command": "toggle_distraction_free" },

    { "keys": ["backspace"], "command": "left_delete" },
    { "keys": ["shift+backspace"], "command": "left_delete" },
    { "keys": ["ctrl+shift+backspace"], "command": "left_delete" }, //删除到行首
    { "keys": ["delete"], "command": "right_delete" },
    { "keys": ["enter"], "command": "insert", "args": { "characters": "\n" } },
    { "keys": ["shift+enter"], "command": "insert", "args": { "characters": "\n" } },

    { "keys": ["ctrl+z"], "command": "undo" },
    { "keys": ["ctrl+shift+z"], "command": "redo" },
    { "keys": ["ctrl+y"], "command": "redo_or_repeat" },
    { "keys": ["ctrl+u"], "command": "soft_undo" },
    { "keys": ["ctrl+shift+u"], "command": "soft_redo" },

    { "keys": ["shift+delete"], "command": "cut" },
    { "keys": ["ctrl+insert"], "command": "copy" },
    { "keys": ["shift+insert"], "command": "paste" },
    { "keys": ["ctrl+x"], "command": "cut" },
    { "keys": ["ctrl+c"], "command": "copy" },
    { "keys": ["ctrl+v"], "command": "paste" },
    { "keys": ["ctrl+shift+v"], "command": "paste_and_indent" },
    { "keys": ["ctrl+k", "ctrl+v"], "command": "paste_from_history" }, //从历史中复制，会弹出选择狂

    { "keys": ["left"], "command": "move", "args": { "by": "characters", "forward": false } },
    { "keys": ["right"], "command": "move", "args": { "by": "characters", "forward": true } },
    { "keys": ["up"], "command": "move", "args": { "by": "lines", "forward": false } },
    { "keys": ["down"], "command": "move", "args": { "by": "lines", "forward": true } },
    { "keys": ["shift+left"], "command": "move", "args": { "by": "characters", "forward": false, "extend": true } }, //从右向左选择一个字符
    { "keys": ["shift+right"], "command": "move", "args": { "by": "characters", "forward": true, "extend": true } }, //从左向右选择一个字符
    { "keys": ["shift+up"], "command": "move", "args": { "by": "lines", "forward": false, "extend": true } }, //向上选择一行
    { "keys": ["shift+down"], "command": "move", "args": { "by": "lines", "forward": true, "extend": true } }, //向下选择一行

    { "keys": ["ctrl+left"], "command": "move", "args": { "by": "words", "forward": false } }, //移动到单词开头
    { "keys": ["ctrl+right"], "command": "move", "args": { "by": "word_ends", "forward": true } }, //移动到单词末尾
    { "keys": ["ctrl+shift+left"], "command": "move", "args": { "by": "words", "forward": false, "extend": true } }, //向左将单词添加到选择范围
    { "keys": ["ctrl+shift+right"], "command": "move", "args": { "by": "word_ends", "forward": true, "extend": true } }, //向右将单词添加到选择范围


    { "keys": ["alt+left"], "command": "move", "args": { "by": "subwords", "forward": false } }, //向左移动到单词末尾
    { "keys": ["alt+right"], "command": "move", "args": { "by": "subword_ends", "forward": true } }, //向右移动到单词末尾
    { "keys": ["alt+shift+left"], "command": "move", "args": { "by": "subwords", "forward": false, "extend": true } }, //向左将单词添加到选择范围
    { "keys": ["alt+shift+right"], "command": "move", "args": { "by": "subword_ends", "forward": true, "extend": true } }, //向右将单词添加到选择范围

    { "keys": ["ctrl+alt+up"], "command": "select_lines", "args": { "forward": false } }, //向上添加到列模式
    { "keys": ["ctrl+alt+down"], "command": "select_lines", "args": { "forward": true } }, //向下加入列模式

    { "keys": ["pageup"], "command": "move", "args": { "by": "pages", "forward": false } }, //移动到上一页
    { "keys": ["pagedown"], "command": "move", "args": { "by": "pages", "forward": true } }, //移动到下一页
    { "keys": ["shift+pageup"], "command": "move", "args": { "by": "pages", "forward": false, "extend": true } }, //向上选择一页
    { "keys": ["shift+pagedown"], "command": "move", "args": { "by": "pages", "forward": true, "extend": true } }, //向下选择一页

    { "keys": ["home"], "command": "move_to", "args": { "to": "bol", "extend": false } }, //移动到行首
    { "keys": ["end"], "command": "move_to", "args": { "to": "eol", "extend": false } }, //移动到行末
    { "keys": ["shift+home"], "command": "move_to", "args": { "to": "bol", "extend": true } }, //选择到行首
    { "keys": ["shift+end"], "command": "move_to", "args": { "to": "eol", "extend": true } }, //选择到行末
    { "keys": ["ctrl+home"], "command": "move_to", "args": { "to": "bof", "extend": false } }, //移动到文件头
    { "keys": ["ctrl+end"], "command": "move_to", "args": { "to": "eof", "extend": false } }, //移动到文件末
    { "keys": ["ctrl+shift+home"], "command": "move_to", "args": { "to": "bof", "extend": true } }, //选择到文件头
    { "keys": ["ctrl+shift+end"], "command": "move_to", "args": { "to": "eof", "extend": true } }, //选择到文件末


    { "keys": ["ctrl+up"], "command": "scroll_lines", "args": { "amount": 1.0 } }, //页面向上滚动一行
    { "keys": ["ctrl+down"], "command": "scroll_lines", "args": { "amount": -1.0 } }, //页面向下滚动一行

    { "keys": ["ctrl+pagedown"], "command": "next_view" }, //跳到下一个文件
    { "keys": ["ctrl+pageup"], "command": "prev_view" }, //跳到上一个文件

    { "keys": ["ctrl+tab"], "command": "next_view_in_stack" }, //跳到下一个文件
    { "keys": ["ctrl+shift+tab"], "command": "prev_view_in_stack" }, //跳到上一个文件

    { "keys": ["ctrl+a"], "command": "select_all" }, //选择所有
    { "keys": ["ctrl+shift+l"], "command": "split_selection_into_lines" }, //选择多行后，进入列模式
    {
        "keys": ["escape"],
        "command": "single_selection",
        "context": [
            { "key": "num_selections", "operator": "not_equal", "operand": 1 }
        ]
    }, {
        "keys": ["escape"],
        "command": "clear_fields",
        "context": [
            { "key": "has_next_field", "operator": "equal", "operand": true }
        ]
    }, //清除字段,有下一个字段
    {
        "keys": ["escape"],
        "command": "clear_fields",
        "context": [
            { "key": "has_prev_field", "operator": "equal", "operand": true }
        ]
    }, //清除字段,有下一个字段
    {
        "keys": ["escape"],
        "command": "hide_panel",
        "args": { "cancel": true },
        "context": [
            { "key": "panel_visible", "operator": "equal", "operand": true }
        ]
    }, //隐藏面板
    {
        "keys": ["escape"],
        "command": "hide_overlay",
        "context": [
            { "key": "overlay_visible", "operator": "equal", "operand": true }
        ]
    }, //隐藏覆盖
    {
        "keys": ["escape"],
        "command": "hide_popup",
        "context": [
            { "key": "popup_visible", "operator": "equal", "operand": true }
        ]
    }, //隐藏弹出窗口
    {
        "keys": ["escape"],
        "command": "hide_auto_complete",
        "context": [
            { "key": "auto_complete_visible", "operator": "equal", "operand": true }
        ]
    }, //取消自动完成

    { "keys": ["tab"], "command": "insert_best_completion", "args": { "default": "\t", "exact": true } }, //插入最佳完成
    {
        "keys": ["tab"],
        "command": "insert_best_completion",
        "args": { "default": "\t", "exact": false },
        "context": [
            { "key": "setting.tab_completion", "operator": "equal", "operand": true },
            { "key": "preceding_text", "operator": "not_regex_match", "operand": ".*\\b[0-9]+$", "match_all": true },
        ]
    }, {
        "keys": ["tab"],
        "command": "replace_completion_with_next_completion",
        "context": [
            { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["tab"],
        "command": "reindent",
        "context": [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_match", "operand": "^$", "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true }
        ]
    }, {
        "keys": ["tab"],
        "command": "indent",
        "context": [
            { "key": "text", "operator": "regex_contains", "operand": "\n" }
        ]
    }, {
        "keys": ["tab"],
        "command": "next_field",
        "context": [
            { "key": "has_next_field", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["tab"],
        "command": "commit_completion",
        "context": [
            { "key": "auto_complete_visible" },
            { "key": "setting.auto_complete_commit_on_tab" }
        ]
    },

    { "keys": ["shift+tab"], "command": "insert", "args": { "characters": "\t" } }, {
        "keys": ["shift+tab"],
        "command": "unindent",
        "context": [
            { "key": "setting.shift_tab_unindent", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["shift+tab"],
        "command": "unindent",
        "context": [
            { "key": "preceding_text", "operator": "regex_match", "operand": "^[\t ]*" }
        ]
    }, {
        "keys": ["shift+tab"],
        "command": "unindent",
        "context": [
            { "key": "text", "operator": "regex_contains", "operand": "\n" }
        ]
    }, {
        "keys": ["shift+tab"],
        "command": "prev_field",
        "context": [
            { "key": "has_prev_field", "operator": "equal", "operand": true }
        ]
    },

    { "keys": ["ctrl+]"], "command": "indent" }, //添加缩进
    { "keys": ["ctrl+["], "command": "unindent" }, //删除缩进

    { "keys": ["insert"], "command": "toggle_overwrite" },

    { "keys": ["ctrl+l"], "command": "expand_selection", "args": { "to": "line" } }, //向下选择一行添加到选择范围
    { "keys": ["ctrl+d"], "command": "find_under_expand" }, //进入列模式，多次执行将下一个添加到命令模式
    { "keys": ["ctrl+k", "ctrl+d"], "command": "find_under_expand_skip" }, //取消上一个列模式
    { "keys": ["ctrl+shift+space"], "command": "expand_selection", "args": { "to": "scope" } },
    { "keys": ["ctrl+shift+m"], "command": "expand_selection", "args": { "to": "brackets" } }, //选择（）｛｝之间的内容 
    { "keys": ["ctrl+m"], "command": "move_to", "args": { "to": "brackets" } }, //移动到匹配的括号
    { "keys": ["ctrl+shift+j"], "command": "expand_selection", "args": { "to": "indentation" } }, //选择 {}有()之间有缩进的内容
    { "keys": ["ctrl+shift+a"], "command": "expand_selection", "args": { "to": "tag" } },

    { "keys": ["alt+."], "command": "close_tag" },

    { "keys": ["ctrl+q"], "command": "toggle_record_macro" },
    { "keys": ["ctrl+shift+q"], "command": "run_macro" },

    { "keys": ["ctrl+enter"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Add Line.sublime-macro" } }, //执行macro
    { "keys": ["ctrl+shift+enter"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Add Line Before.sublime-macro" } }, //在当前行前添加一个空行
    {
        "keys": ["enter"],
        "command": "commit_completion",
        "context": [
            { "key": "auto_complete_visible" },
            { "key": "setting.auto_complete_commit_on_tab", "operand": false }
        ]
    },

    { "keys": ["ctrl+p"], "command": "show_overlay", "args": { "overlay": "goto", "show_files": true } }, //显示最近的文件的选择框  overlay覆盖物
    { "keys": ["ctrl+shift+p"], "command": "show_overlay", "args": { "overlay": "command_palette" } }, //显示命令板
    { "keys": ["ctrl+r"], "command": "show_overlay", "args": { "overlay": "goto", "text": "@" } }, // 跳到某个函数
    { "keys": ["ctrl+g"], "command": "show_overlay", "args": { "overlay": "goto", "text": ":" } }, // 跳到某行
    { "keys": ["ctrl+;"], "command": "show_overlay", "args": { "overlay": "goto", "text": "#" } }, // 搜索所有的某个字符串
    { "keys": ["f12"], "command": "goto_definition" },
    { "keys": ["ctrl+shift+r"], "command": "goto_symbol_in_project" },
    { "keys": ["alt+keypad_minus"], "command": "jump_back" }, //回跳 查看做过什么操作
    { "keys": ["alt+shift+keypad_minus"], "command": "jump_forward" },
    { "keys": ["alt+-"], "command": "jump_back" }, //历史操作返回
    { "keys": ["alt+shift+-"], "command": "jump_forward" }, //历史操作向前

    { "keys": ["ctrl+i"], "command": "show_panel", "args": { "panel": "incremental_find", "reverse": false } }, //显示查找面板
    { "keys": ["ctrl+shift+i"], "command": "show_panel", "args": { "panel": "incremental_find", "reverse": true } }, //显示查找面板
    { "keys": ["ctrl+f"], "command": "show_panel", "args": { "panel": "find", "reverse": false } }, //显示查找面板
    { "keys": ["ctrl+h"], "command": "show_panel", "args": { "panel": "replace", "reverse": false } }, //显示替换面板
    { "keys": ["ctrl+shift+h"], "command": "replace_next" },
    { "keys": ["f3"], "command": "find_next" },//查找下一个
    { "keys": ["shift+f3"], "command": "find_prev" }, //查找上一个
    { "keys": ["ctrl+f3"], "command": "find_under" }, //查找下一个
    { "keys": ["ctrl+shift+f3"], "command": "find_under_prev" }, ////查找上一个
    { "keys": ["alt+f3"], "command": "find_all_under" }, //查砸所有并进入列模式
    { "keys": ["ctrl+e"], "command": "slurp_find_string" }, //将选择的字符用</>包含
    { "keys": ["ctrl+shift+e"], "command": "slurp_replace_string" },
    { "keys": ["ctrl+shift+f"], "command": "show_panel", "args": { "panel": "find_in_files" } }, //选择在哪些文件中替换哪些字符
    { "keys": ["f4"], "command": "next_result" },
    { "keys": ["shift+f4"], "command": "prev_result" },

    { "keys": ["f6"], "command": "toggle_setting", "args": { "setting": "spell_check" } }, //拼写检查
    { "keys": ["ctrl+f6"], "command": "next_misspelling" }, //f6 后查看下一个错误的拼写
    { "keys": ["ctrl+shift+f6"], "command": "prev_misspelling" } //f6 后查看上一个错误的拼写,

    { "keys": ["ctrl+shift+up"], "command": "swap_line_up" }, // 与上一行交换
    { "keys": ["ctrl+shift+down"], "command": "swap_line_down" }, //与下一行交换

    { "keys": ["ctrl+backspace"], "command": "delete_word", "args": { "forward": false } }, //删除前一个单词
    { "keys": ["ctrl+shift+backspace"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete to Hard BOL.sublime-macro" } }, //删除到行首

    { "keys": ["ctrl+delete"], "command": "delete_word", "args": { "forward": true } }, //删除下一个单词
    { "keys": ["ctrl+shift+delete"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete to Hard EOL.sublime-macro" } }, //删除到行末

    { "keys": ["ctrl+/"], "command": "toggle_comment", "args": { "block": false } }, // 用//注释
    { "keys": ["ctrl+shift+/"], "command": "toggle_comment", "args": { "block": true } }, //用 /**/注释

    { "keys": ["ctrl+j"], "command": "join_lines" }, //合并所选的行，或合并下一行
    { "keys": ["ctrl+shift+d"], "command": "duplicate_line" }, //复制当前行或所有选择的行

    { "keys": ["ctrl+`"], "command": "show_panel", "args": { "panel": "console", "toggle": true } }, //loading dictionary

    { "keys": ["ctrl+space"], "command": "auto_complete" }, {
        "keys": ["ctrl+space"],
        "command": "replace_completion_with_auto_complete",
        "context": [
            { "key": "last_command", "operator": "equal", "operand": "insert_best_completion" },
            { "key": "auto_complete_visible", "operator": "equal", "operand": false },
            { "key": "setting.tab_completion", "operator": "equal", "operand": true }
        ]
    },

    { "keys": ["ctrl+alt+shift+p"], "command": "show_scope_name" },

    { "keys": ["f7"], "command": "build" },
    { "keys": ["ctrl+b"], "command": "build" },
    { "keys": ["ctrl+shift+b"], "command": "build", "args": { "select": true } },
    { "keys": ["ctrl+break"], "command": "exec", "args": { "kill": true } },

    { "keys": ["ctrl+t"], "command": "transpose" }, //transpose 调换

    { "keys": ["f9"], "command": "sort_lines", "args": { "case_sensitive": false } }, //排序
    { "keys": ["ctrl+f9"], "command": "sort_lines", "args": { "case_sensitive": true } }, //排序

    // Auto-pair quotes
    {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": { "contents": "\"$0\"" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "[\"a-zA-Z0-9_]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true }
        ]
    }, {
        "keys": ["\""],
        "command": "insert_snippet",
        "args": { "contents": "\"${0:$SELECTION}\"" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    }, {
        "keys": ["\""],
        "command": "move",
        "args": { "by": "characters", "forward": true },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
        ]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\"$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\"", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.double - punctuation.definition.string.end", "match_all": true },
        ]
    },

    // Auto-pair single quotes
    {
        "keys": ["'"],
        "command": "insert_snippet",
        "args": { "contents": "'$0'" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
            { "key": "preceding_text", "operator": "not_regex_contains", "operand": "['a-zA-Z0-9_]$", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true }
        ]
    }, {
        "keys": ["'"],
        "command": "insert_snippet",
        "args": { "contents": "'${0:$SELECTION}'" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    }, {
        "keys": ["'"],
        "command": "move",
        "args": { "by": "characters", "forward": true },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
        ]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "'$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^'", "match_all": true },
            { "key": "selector", "operator": "not_equal", "operand": "punctuation.definition.string.begin", "match_all": true },
            { "key": "eol_selector", "operator": "not_equal", "operand": "string.quoted.single - punctuation.definition.string.end", "match_all": true },
        ]
    },

    // Auto-pair brackets
    {
        "keys": ["("],
        "command": "insert_snippet",
        "args": { "contents": "($0)" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
        ]
    }, {
        "keys": ["("],
        "command": "insert_snippet",
        "args": { "contents": "(${0:$SELECTION})" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    }, {
        "keys": [")"],
        "command": "move",
        "args": { "by": "characters", "forward": true },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
        ]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\($", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\)", "match_all": true }
        ]
    },

    // Auto-pair square brackets
    {
        "keys": ["["],
        "command": "insert_snippet",
        "args": { "contents": "[$0]" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|;|\\}|$)", "match_all": true }
        ]
    }, {
        "keys": ["["],
        "command": "insert_snippet",
        "args": { "contents": "[${0:$SELECTION}]" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    }, {
        "keys": ["]"],
        "command": "move",
        "args": { "by": "characters", "forward": true },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
        ]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\[$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\]", "match_all": true }
        ]
    },

    // Auto-pair curly brackets
    {
        "keys": ["{"],
        "command": "insert_snippet",
        "args": { "contents": "{$0}" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|$)", "match_all": true }
        ]
    }, {
        "keys": ["{"],
        "command": "wrap_block",
        "args": { "begin": "{", "end": "}" },
        "context": [
            { "key": "indented_block", "match_all": true },
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_match", "operand": "^$", "match_all": true },
        ]
    }, {
        "keys": ["{"],
        "command": "insert_snippet",
        "args": { "contents": "{${0:$SELECTION}}" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
        ]
    }, {
        "keys": ["}"],
        "command": "move",
        "args": { "by": "characters", "forward": true },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    }, {
        "keys": ["backspace"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Delete Left Right.sublime-macro" },
        "context": [
            { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },

    {
        "keys": ["enter"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Add Line in Braces.sublime-macro" },
        "context": [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    }, {
        "keys": ["shift+enter"],
        "command": "run_macro_file",
        "args": { "file": "res://Packages/Default/Add Line in Braces.sublime-macro" },
        "context": [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": "\\{$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^\\}", "match_all": true }
        ]
    },

    {
        "keys": ["enter"],
        "command": "auto_indent_tag",
        "context": [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
        ]
    }, {
        "keys": ["shift+enter"],
        "command": "auto_indent_tag",
        "context": [
            { "key": "setting.auto_indent", "operator": "equal", "operand": true },
            { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
            { "key": "selector", "operator": "equal", "operand": "punctuation.definition.tag.begin", "match_all": true },
            { "key": "preceding_text", "operator": "regex_contains", "operand": ">$", "match_all": true },
            { "key": "following_text", "operator": "regex_contains", "operand": "^</", "match_all": true },
        ]
    },

    {
        "keys": ["alt+shift+1"], //
        "command": "set_layout",
        "args": {
            "cols": [0.0, 1.0],
            "rows": [0.0, 1.0],
            "cells": [
                [0, 0, 1, 1]
            ]
        }
    }, {
        "keys": ["alt+shift+2"], //在一个窗口中打开两个布局
        "command": "set_layout",
        "args": {
            "cols": [0.0, 0.5, 1.0],
            "rows": [0.0, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [1, 0, 2, 1]
            ]
        }
    }, {
        "keys": ["alt+shift+3"],
        "command": "set_layout",
        "args": {
            "cols": [0.0, 0.33, 0.66, 1.0],
            "rows": [0.0, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [1, 0, 2, 1],
                [2, 0, 3, 1]
            ]
        }
    }, {
        "keys": ["alt+shift+4"],
        "command": "set_layout",
        "args": {
            "cols": [0.0, 0.25, 0.5, 0.75, 1.0],
            "rows": [0.0, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [1, 0, 2, 1],
                [2, 0, 3, 1],
                [3, 0, 4, 1]
            ]
        }
    }, {
        "keys": ["alt+shift+8"],
        "command": "set_layout",
        "args": {
            "cols": [0.0, 1.0],
            "rows": [0.0, 0.5, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [0, 1, 1, 2]
            ]
        }
    }, {
        "keys": ["alt+shift+9"],
        "command": "set_layout",
        "args": {
            "cols": [0.0, 1.0],
            "rows": [0.0, 0.33, 0.66, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [0, 1, 1, 2],
                [0, 2, 1, 3]
            ]
        }
    }, {
        "keys": ["alt+shift+5"],
        "command": "set_layout",
        "args": {
            "cols": [0.0, 0.5, 1.0],
            "rows": [0.0, 0.5, 1.0],
            "cells": [
                [0, 0, 1, 1],
                [1, 0, 2, 1],
                [0, 1, 1, 2],
                [1, 1, 2, 2]
            ]
        }
    },
    { "keys": ["ctrl+1"], "command": "focus_group", "args": { "group": 0 } }, //定位到第一个布局
    { "keys": ["ctrl+2"], "command": "focus_group", "args": { "group": 1 } },
    { "keys": ["ctrl+3"], "command": "focus_group", "args": { "group": 2 } },
    { "keys": ["ctrl+4"], "command": "focus_group", "args": { "group": 3 } },
    { "keys": ["ctrl+5"], "command": "focus_group", "args": { "group": 4 } },
    { "keys": ["ctrl+6"], "command": "focus_group", "args": { "group": 5 } },
    { "keys": ["ctrl+7"], "command": "focus_group", "args": { "group": 6 } },
    { "keys": ["ctrl+8"], "command": "focus_group", "args": { "group": 7 } },
    { "keys": ["ctrl+9"], "command": "focus_group", "args": { "group": 8 } },
    { "keys": ["ctrl+shift+1"], "command": "move_to_group", "args": { "group": 0 } }, //将文件移动到第一个布局
    { "keys": ["ctrl+shift+2"], "command": "move_to_group", "args": { "group": 1 } },
    { "keys": ["ctrl+shift+3"], "command": "move_to_group", "args": { "group": 2 } },
    { "keys": ["ctrl+shift+4"], "command": "move_to_group", "args": { "group": 3 } },
    { "keys": ["ctrl+shift+5"], "command": "move_to_group", "args": { "group": 4 } },
    { "keys": ["ctrl+shift+6"], "command": "move_to_group", "args": { "group": 5 } },
    { "keys": ["ctrl+shift+7"], "command": "move_to_group", "args": { "group": 6 } },
    { "keys": ["ctrl+shift+8"], "command": "move_to_group", "args": { "group": 7 } },
    { "keys": ["ctrl+shift+9"], "command": "move_to_group", "args": { "group": 8 } },
    { "keys": ["ctrl+0"], "command": "focus_side_bar" },

    { "keys": ["ctrl+k", "ctrl+up"], "command": "new_pane" }, //将文件移动到一个新的布局
    { "keys": ["ctrl+k", "ctrl+shift+up"], "command": "new_pane", "args": { "move": false } }, //新建一个布局
    { "keys": ["ctrl+k", "ctrl+down"], "command": "close_pane" }, //关闭当前布局
    { "keys": ["ctrl+k", "ctrl+left"], "command": "focus_neighboring_group", "args": { "forward": false } }, //定位到上一个布局
    { "keys": ["ctrl+k", "ctrl+right"], "command": "focus_neighboring_group" }, //定位到下一个布局
    { "keys": ["ctrl+k", "ctrl+shift+left"], "command": "move_to_neighboring_group", "args": { "forward": false } }, //将文件移动到上一个布局
    { "keys": ["ctrl+k", "ctrl+shift+right"], "command": "move_to_neighboring_group" }, //将文件移动到下一个布局

    { "keys": ["alt+1"], "command": "select_by_index", "args": { "index": 0 } }, //定位到当前布局的第一个文件
    { "keys": ["alt+2"], "command": "select_by_index", "args": { "index": 1 } },
    { "keys": ["alt+3"], "command": "select_by_index", "args": { "index": 2 } },
    { "keys": ["alt+4"], "command": "select_by_index", "args": { "index": 3 } },
    { "keys": ["alt+5"], "command": "select_by_index", "args": { "index": 4 } },
    { "keys": ["alt+6"], "command": "select_by_index", "args": { "index": 5 } },
    { "keys": ["alt+7"], "command": "select_by_index", "args": { "index": 6 } },
    { "keys": ["alt+8"], "command": "select_by_index", "args": { "index": 7 } },
    { "keys": ["alt+9"], "command": "select_by_index", "args": { "index": 8 } },
    { "keys": ["alt+0"], "command": "select_by_index", "args": { "index": 9 } },

    { "keys": ["f2"], "command": "next_bookmark" },
    { "keys": ["shift+f2"], "command": "prev_bookmark" },
    { "keys": ["ctrl+f2"], "command": "toggle_bookmark" },
    { "keys": ["ctrl+shift+f2"], "command": "clear_bookmarks" },
    { "keys": ["alt+f2"], "command": "select_all_bookmarks" },

    { "keys": ["ctrl+shift+k"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete Line.sublime-macro" } }, //删除行

    { "keys": ["alt+q"], "command": "wrap_lines" },

    { "keys": ["ctrl+k", "ctrl+u"], "command": "upper_case" }, //将选中的全部大写
    { "keys": ["ctrl+k", "ctrl+l"], "command": "lower_case" }, //将选中的全部小写

    { "keys": ["ctrl+k", "ctrl+space"], "command": "set_mark" },
    { "keys": ["ctrl+k", "ctrl+a"], "command": "select_to_mark" },
    { "keys": ["ctrl+k", "ctrl+w"], "command": "delete_to_mark" },
    { "keys": ["ctrl+k", "ctrl+x"], "command": "swap_with_mark" },
    { "keys": ["ctrl+k", "ctrl+y"], "command": "yank" },
    { "keys": ["ctrl+k", "ctrl+k"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete to Hard EOL.sublime-macro" } },
    { "keys": ["ctrl+k", "ctrl+backspace"], "command": "run_macro_file", "args": { "file": "res://Packages/Default/Delete to Hard BOL.sublime-macro" } },
    { "keys": ["ctrl+k", "ctrl+g"], "command": "clear_bookmarks", "args": { "name": "mark" } },
    { "keys": ["ctrl+k", "ctrl+c"], "command": "show_at_center" }, //跳到文件中间位置

    { "keys": ["ctrl++"], "command": "increase_font_size" }, //放大文件大小
    { "keys": ["ctrl+="], "command": "increase_font_size" }, //放大文件大小
    { "keys": ["ctrl+keypad_plus"], "command": "increase_font_size" }, //放大文件大小
    { "keys": ["ctrl+-"], "command": "decrease_font_size" }, //缩小文件大小
    { "keys": ["ctrl+keypad_minus"], "command": "decrease_font_size" }, //缩小文件大小

    { "keys": ["ctrl+equals"], "command": "increase_font_size" }, //放大文件大小
    { "keys": ["ctrl+shift+equals"], "command": "decrease_font_size" }, //缩小文件大小
    { "keys": ["ctrl+shift+keypad_plus"], "command": "decrease_font_size" }, //缩小文件大小

    { "keys": ["alt+shift+w"], "command": "insert_snippet", "args": { "name": "Packages/XML/Snippets/long-tag.sublime-snippet" } }, //用<p></p> 包含字符

    { "keys": ["ctrl+shift+["], "command": "fold" }, //折叠
    { "keys": ["ctrl+shift+]"], "command": "unfold" }, //打开
    { "keys": ["ctrl+k", "ctrl+1"], "command": "fold_by_level", "args": { "level": 1 } }, //折叠第几层
    { "keys": ["ctrl+k", "ctrl+2"], "command": "fold_by_level", "args": { "level": 2 } },
    { "keys": ["ctrl+k", "ctrl+3"], "command": "fold_by_level", "args": { "level": 3 } },
    { "keys": ["ctrl+k", "ctrl+4"], "command": "fold_by_level", "args": { "level": 4 } },
    { "keys": ["ctrl+k", "ctrl+5"], "command": "fold_by_level", "args": { "level": 5 } },
    { "keys": ["ctrl+k", "ctrl+6"], "command": "fold_by_level", "args": { "level": 6 } },
    { "keys": ["ctrl+k", "ctrl+7"], "command": "fold_by_level", "args": { "level": 7 } },
    { "keys": ["ctrl+k", "ctrl+8"], "command": "fold_by_level", "args": { "level": 8 } },
    { "keys": ["ctrl+k", "ctrl+9"], "command": "fold_by_level", "args": { "level": 9 } },
    { "keys": ["ctrl+k", "ctrl+0"], "command": "unfold_all" }, // 打开所有折叠
    { "keys": ["ctrl+k", "ctrl+j"], "command": "unfold_all" }, // 打开所有折叠
    { "keys": ["ctrl+k", "ctrl+t"], "command": "fold_tag_attributes" },

    { "keys": ["context_menu"], "command": "context_menu" },

    {
        "keys": ["alt+c"],
        "command": "toggle_case_sensitive",
        "context": [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["alt+r"],
        "command": "toggle_regex",
        "context": [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["alt+w"],
        "command": "toggle_whole_word",
        "context": [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    }, {
        "keys": ["alt+a"],
        "command": "toggle_preserve_case",
        "context": [
            { "key": "setting.is_widget", "operator": "equal", "operand": true }
        ]
    },

    // Find panel key bindings
    {
        "keys": ["enter"],
        "command": "find_next",
        "context": [{ "key": "panel", "operand": "find" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["shift+enter"],
        "command": "find_prev",
        "context": [{ "key": "panel", "operand": "find" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["alt+enter"],
        "command": "find_all",
        "args": { "close_panel": true },
        "context": [{ "key": "panel", "operand": "find" }, { "key": "panel_has_focus" }]
    },

    // Replace panel key bindings
    {
        "keys": ["enter"],
        "command": "find_next",
        "context": [{ "key": "panel", "operand": "replace" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["shift+enter"],
        "command": "find_prev",
        "context": [{ "key": "panel", "operand": "replace" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["alt+enter"],
        "command": "find_all",
        "args": { "close_panel": true },
        "context": [{ "key": "panel", "operand": "replace" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["ctrl+alt+enter"],
        "command": "replace_all",
        "args": { "close_panel": true },
        "context": [{ "key": "panel", "operand": "replace" }, { "key": "panel_has_focus" }]
    },

    // Incremental find panel key bindings
    {
        "keys": ["enter"],
        "command": "hide_panel",
        "context": [{ "key": "panel", "operand": "incremental_find" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["shift+enter"],
        "command": "find_prev",
        "context": [{ "key": "panel", "operand": "incremental_find" }, { "key": "panel_has_focus" }]
    }, {
        "keys": ["alt+enter"],
        "command": "find_all",
        "args": { "close_panel": true },
        "context": [{ "key": "panel", "operand": "incremental_find" }, { "key": "panel_has_focus" }]
    },

    // HTML, XML close tag
    {
        "keys": ["/"],
        "command": "close_tag",
        "args": { "insert_slash": true },
        "context": [
            { "key": "selector", "operator": "equal", "operand": "(text.html, text.xml) - string - comment", "match_all": true },
            { "key": "preceding_text", "operator": "regex_match", "operand": ".*<$", "match_all": true },
            { "key": "setting.auto_close_tags" }
        ]
    }
]
